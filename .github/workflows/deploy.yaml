name: Build & Deploy Pages

on:
  push:
    branches: [ '**' ]  # 全ブランチでビルド (main 以外は preview のみ)
  pull_request:
    branches: [ main ]
  workflow_dispatch: {}
  # schedule:
  #   - cron: '30 2 * * *'

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: pages-deploy
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Prepare static site
        run: |
          set -e
          echo "Branch: $GITHUB_REF_NAME"
          ls -al
          # 同期: データファイル
          if [ -f pokefuta.ndjson ]; then
            cp pokefuta.ndjson apps/web/pokefuta.ndjson
          fi
          if [ -f gmanhole.ndjson ]; then
            cp gmanhole.ndjson apps/web/assets/gmanhole.ndjson
          fi
          if [ -f dataset/manhole_icon.png ]; then
            cp dataset/manhole_icon.png apps/web/assets/manhole_icon.png || true
          fi
          # ブランチ情報バナー (optional): JSON 生成
          echo '{"branch":"'$GITHUB_REF_NAME'","commit":"'$GITHUB_SHA'"}' > apps/web/build_meta.json

      - name: Upload preview artifact (non-main)
        if: ${{ github.ref_name != 'main' }}
        uses: actions/upload-artifact@v4
        with:
          name: preview-${{ github.ref_name }}
          path: apps/web
          retention-days: 5

      - name: Upload pages artifact (main only)
        if: ${{ github.ref_name == 'main' }}
        uses: actions/upload-pages-artifact@v3
        with:
          path: apps/web

  deploy:
    if: ${{ github.ref_name == 'main' }}
    needs: build
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4

  note-non-main:
    if: ${{ github.ref_name != 'main' }}
    runs-on: ubuntu-latest
    steps:
      - name: Explain skip
        run: echo 'Branch $GITHUB_REF_NAME is not main; deployment skipped due to environment protection. Use the generated preview artifact instead.'